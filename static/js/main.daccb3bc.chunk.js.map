{"version":3,"sources":["component/dashboard.tsx","component/Scabble.tsx","component/data.ts","component/WordSearch.tsx","component/WF.js","component/hangman/game-states.js","component/hangman/game-state-factory.js","component/hangman/random-word.js","component/hangman/HangmanGameFooter.js","component/hangman/HangmanGameHeader.js","component/hangman/AttemptsLeft.js","component/hangman/Letter.js","component/hangman/Word.js","component/hangman/RestartButton.js","component/hangman/LettersRow.js","component/hangman/LetterBlock.js","component/hangman/VirtualKeyboard.js","component/hangman/Hangman.js","component/hangman/HangmanAttempts.js","component/hangman/Game.js","component/hangman/HangmanGame.js","component/crossword/CrossWord.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","dataField","text","DashboardComponent","props","state","leaderBoardData","rank","name","score","data","this","shuffleArray","setState","array","i","length","j","Math","floor","random","temp","Container","Row","className","Col","style","marginBottom","ButtonGroup","aria-label","Button","variant","onClick","shuffle","bind","keyField","striped","hover","condensed","pagination","paginationFactory","paginationSize","pageStartIndex","sizePerPageList","value","Component","ScrabbleComponent","word","hint","display","selection","disabled","successJumbotron","failureJumbotron","hintJumbotron","failed","success","hintFlag","selectionIndex","level","newGame","sort","wordClick","charAt","findIndex","e","index","console","log","pop","join","Jumbotron","aria-hidden","letter","clickIndex","event","push","flat","ButtonToolbar","Dropdown","Toggle","id","Menu","Item","onSelect","changeLevel","undo","showHint","split","map","leter","hidden","check","orientations","horizontal","x","y","horizontalBack","vertical","verticalUp","diagonal","diagonalBack","diagonalUp","diagonalUpBack","allOrientations","WordSearchComponent","width","height","wordList","wordListHindi","wordList1","wordList2","wordList3","wordListHindi1","wordListHindi2","wordListHindi3","startSquare","selectedSquares","curWord","curOrientation","matrix","createMatrix","combine","forEach","wordHindi","selected","createBindings","window","navigator","msPointerEnabled","$","on","startTurn","select","endTurn","mousedown","mouseenter","mouseMove","mouseup","touchMove","target","lastSquare","backTo","len","removeClass","splice","substr","x1","attributes","x2","x3","currentTarget","x4","newOrientation","calcOrientation","x11","x21","x31","x41","orientation","playTurn","addClass","textContent","y1","y2","nextPos","nextFn","square","indexOf","classList","add","xPos","originalEvent","touches","pageX","yPos","pageY","targetElement","document","elementFromPoint","contains","filter","w","includes","classToApply","attr","reveal","gameComplete","options","preferOverlap","fill","LETTERS","checkOrientations","h","l","skipOrientations","fillPuzzle","words","puzzle","placeWordInPuzzle","locations","findBestLocations","sel","placeWord","wordLength","maxOverlap","k","next","skipTo","overlap","calcOverlap","nextPossible","pruneLocations","fnGetSquare","pruned","validOrientations","newPuzzle","settings","Error","attempts","gridGrowths","opts","maxWordLength","slice","fillBlanks","undefined","allowExtraBlanks","maxAttempts","maxGridGrowth","lettersToAdd","extraLetterGenerator","fillingBlanksCount","toLowerCase","extraLettersCount","gridFillPercent","toFixed","solve","found","notFound","print","puzzleString","row","WordFind","elements","getElementsByClassName","el","remove","alert","reCreate","index2","lineHeight","marginTop","GAME_OVER","Symbol","GAME_STARTED","GAME_WON","gameWord","wordIndex","randomWord","letters","guessed","guesses","gameState","pastGuesses","AppFooter","AttemptsLeft","Letter","Word","children","RestartButton","LettersRow","LetterBlock","VirtualKeyboard","_renderRow","FIRST_ROW","SECOND_ROW","THIRD_ROW","excluded","defaultProps","styles","character","stroke","strokeWidth","post","Hangman","points","_renderBody","_renderLeftArm","_renderRightArm","_renderLeftLeg","_renderRightLeg","_renderHead","body","cx","cy","r","leftArm","rightArm","leftLeg","rightLeg","attemptsLeft","Game","_renderInputPanel","hangmanAttempts","hasAttemptsLeft","gameWon","content","_renderGameFinished","onLetterClick","_renderWord","message","cssClass","onRestartClick","letterValue","HangmanGame","gameFactory","gameProps","preventDefault","letterObject","Object","assign","reduce","winState","currentObject","prevState","concat","guessesLeft","stateUpdate","clue","across","1","answer","col","4","7","8","10","11","12","13","16","19","21","22","23","25","26","27","down","2","3","5","6","9","14","15","17","18","20","24","CrossWord","useStorage","App","Navbar","bg","Nav","NavItem","Link","as","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.daccb3bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup, Col, Container, Row } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nconst columns = [\r\n  {\r\n    dataField: \"rank\",\r\n    text: \"Rank\",\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"User Name\",\r\n  },\r\n  {\r\n    dataField: \"score\",\r\n    text: \"Score\",\r\n  },\r\n];\r\nexport class DashboardComponent extends Component<\r\n  {},\r\n  { leaderBoardData: any }\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      leaderBoardData: [\r\n        { rank: \"1\", name: \"Anuj\", score: \"3333333\" },\r\n        { rank: \"2\", name: \"Ram\", score: \"555555\" },\r\n        { rank: \"3\", name: \"Anand\", score: \"222222\" },\r\n        { rank: \"4\", name: \"Nishant\", score: \"1111111\" },\r\n        { rank: \"5\", name: \"Rahul\", score: \"123\" },\r\n        { rank: \"6\", name: \"Ram1\", score: \"555555\" },\r\n        { rank: \"7\", name: \"Anand1\", score: \"222222\" },\r\n        { rank: \"8\", name: \"Nishant1\", score: \"1111111\" },\r\n        { rank: \"9\", name: \"Rahul1\", score: \"123\" },\r\n        { rank: \"10\", name: \"Ram2\", score: \"555555\" },\r\n        { rank: \"11\", name: \"Anand2\", score: \"222222\" },\r\n        { rank: \"12\", name: \"Nishant2\", score: \"1111111\" },\r\n        { rank: \"13\", name: \"Rahul2\", score: \"123\" },\r\n      ],\r\n    };\r\n  }\r\n  shuffle() {\r\n    const data = this.shuffleArray(this.state.leaderBoardData);\r\n    this.setState({ leaderBoardData: data });\r\n  }\r\n  shuffleArray(array: any) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <h4>LeaderBoard</h4>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center\" style={{ marginBottom: \"8px\" }}>\r\n            <ButtonGroup aria-label=\"Basic example\">\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Daily\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Monthly\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Yearly\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <BootstrapTable\r\n              keyField=\"rank\"\r\n              data={this.state.leaderBoardData}\r\n              columns={columns}\r\n              striped\r\n              hover\r\n              condensed\r\n              pagination={paginationFactory({\r\n                paginationSize: 4,\r\n                pageStartIndex: 0,\r\n                sizePerPageList: [\r\n                  {\r\n                    text: \"5\",\r\n                    value: 5,\r\n                  },\r\n                ],\r\n              })}\r\n            />{\" \"}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  Dropdown,\r\n  Jumbotron,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nexport class ScrabbleComponent extends Component<{}, {}> {\r\n  word: any;\r\n  hint = \"\";\r\n  display: any;\r\n  selection: any;\r\n  disabled: any;\r\n  successJumbotron: any;\r\n  failureJumbotron: any;\r\n  hintJumbotron: any = \"\";\r\n  failed = false;\r\n  success = false;\r\n  hintFlag = false;\r\n  selectionIndex: any;\r\n  level = \"Level 1\";\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.newGame();\r\n  }\r\n  shuffleArray(array: any) {\r\n    array.sort(() => Math.random() - 0.5);\r\n    return array;\r\n  }\r\n  showHint() {\r\n    // this.hintFlag = true;\r\n    // this.selection.push(this.word.charAt(this.selection.length));\r\n    this.wordClick(\r\n      this.word.charAt(this.selection.length),\r\n      this.display.findIndex((e: any, index: any) => {\r\n        if (this.disabled[index]) {\r\n          return false;\r\n        } else {\r\n          return e === this.word.charAt(this.selection.length);\r\n        }\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n  undo() {\r\n    console.log(this);\r\n    this.selection.pop();\r\n    this.hintFlag = false;\r\n    this.disabled[this.selectionIndex.pop()] = false;\r\n    this.setState({});\r\n  }\r\n  check() {\r\n    if (this.selection.join(\"\") === this.word) {\r\n      this.failed = false;\r\n      this.success = true;\r\n      this.successJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>You Win</h1>\r\n          <p>\r\n            <i className=\"fa fa-smile-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    } else {\r\n      this.failed = true;\r\n      this.success = false;\r\n      this.failureJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>Try again!</h1>\r\n          <p>\r\n            <i className=\"fa fa-frown-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    }\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n\r\n  wordClick(letter: any, clickIndex: any, event: any) {\r\n    console.log(event);\r\n    console.log(letter);\r\n    this.selection.push(letter);\r\n    this.selectionIndex.push(clickIndex);\r\n    this.disabled[clickIndex] = true;\r\n    if (this.disabled.flat().length === this.display.length) {\r\n      this.hintFlag = true;\r\n    }\r\n    this.setState({});\r\n  }\r\n  newGame() {\r\n    if (this.level === \"Level 1\") {\r\n      this.word = \"early\";\r\n      this.hint = \"जल्दी\";\r\n    } else if (this.level === \"Level 2\") {\r\n      this.word = \"Squeeze\";\r\n      this.hint = \"निचोड़ना\";\r\n    } else {\r\n      this.word = \"abnormal\";\r\n      this.hint = \"असामान्य\";\r\n    }\r\n    this.display = [...this.word];\r\n    this.display = this.shuffleArray(this.display);\r\n    this.selection = [];\r\n    this.selectionIndex = [];\r\n    this.disabled = [];\r\n    this.failed = false;\r\n    this.success = false;\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n  changeLevel(level: any) {\r\n    this.level = \"Level \" + level;\r\n    this.newGame();\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n        <Container className=\"justify-content-center\">\r\n          <Row className=\"justify-content-center\"></Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group1\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    {this.level}\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 1)}>\r\n                      {\" \"}\r\n                      Level 1\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 2)}>\r\n                      {\" \"}\r\n                      Level 2\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 3)}>\r\n                      {\" \"}\r\n                      Level 3\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.newGame.bind(this)}\r\n                >\r\n                  New Game\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  disabled={\r\n                    this.selectionIndex.length === 0 ||\r\n                    this.failed ||\r\n                    this.success\r\n                  }\r\n                  onClick={this.undo.bind(this)}\r\n                >\r\n                  Undo\r\n                </Button>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  disabled={this.hintFlag || this.failed || this.success}\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.showHint.bind(this)}\r\n                >\r\n                  Hint\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <Jumbotron className=\"text-center\">\r\n              <h1>Meaning</h1>\r\n              <p>{this.hint}</p>\r\n            </Jumbotron>\r\n          </Row>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.word.split(\"\").map((leter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"fill\" + index}\r\n                  >\r\n                    <Button variant=\"outline-primary\">\r\n                      {this.selection[index]}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.display.map((letter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"word\" + index}\r\n                  >\r\n                    <Button\r\n                      // hidden={this.disabled[index] === true}\r\n                      onClick={this.wordClick.bind(this, letter, index)}\r\n                      disabled={this.disabled[index] === true}\r\n                    >\r\n                      {letter}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={this.selection.flat().length !== this.word.length}\r\n          >\r\n            <Button\r\n              disabled={this.success || this.failed}\r\n              onClick={this.check.bind(this)}\r\n            >\r\n              Check\r\n            </Button>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row className=\"justify-content-center\" hidden={!this.hintFlag}>\r\n            {this.hintJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(this.success && !this.failed)}\r\n          >\r\n            {this.successJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(!this.success && this.failed)}\r\n          >\r\n            {this.failureJumbotron}\r\n          </Row>{\" \"}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const orientations: any = {\r\n  horizontal: function (x: any, y: any, i: any) {\r\n    return { x: x + i, y: y };\r\n  },\r\n  horizontalBack: function (x: any, y: any, i: any) {\r\n    return { x: x - i, y: y };\r\n  },\r\n  vertical: function (x: any, y: any, i: any) {\r\n    return { x: x, y: y + i };\r\n  },\r\n  verticalUp: function (x: any, y: any, i: any) {\r\n    return { x: x, y: y - i };\r\n  },\r\n  diagonal: function (x: any, y: any, i: any) {\r\n    return { x: x + i, y: y + i };\r\n  },\r\n  diagonalBack: function (x: any, y: any, i: any) {\r\n    return { x: x - i, y: y + i };\r\n  },\r\n  diagonalUp: function (x: any, y: any, i: any) {\r\n    return { x: x + i, y: y - i };\r\n  },\r\n  diagonalUpBack: function (x: any, y: any, i: any) {\r\n    return { x: x - i, y: y - i };\r\n  },\r\n};\r\nexport const allOrientations = [\r\n  \"diagonal\",\r\n  \"diagonalBack\",\r\n  \"diagonalUp\",\r\n  \"diagonal\",\r\n  \"diagonalBack\",\r\n  \"diagonalUp\",\r\n  \"diagonal\",\r\n  \"diagonalBack\",\r\n  \"diagonalUp\",\r\n  \"horizontal\",\r\n  \"vertical\",\r\n  // \"horizontalBack\",\r\n  // \"vertical\",\r\n  // \"verticalUp\",\r\n  // \"diagonalUpBack\",\r\n];\r\n","import $ from \"jquery\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { allOrientations, orientations } from \"./data\";\r\nimport { WordFind } from \"./WF\";\r\nexport class WordSearchComponent extends Component<\r\n  {},\r\n  {\r\n    matrix: any;\r\n    combine: any;\r\n  }\r\n> {\r\n  level = \"Level 1\";\r\n  width = 6;\r\n  height = 6;\r\n  wordList: any = [\"COME\", \"BEST\", \"JERK\", \"ERASE\", \"JAW\", \"ALLOW\"];\r\n  wordListHindi: any = [\r\n    \"आइए\",\r\n    \"श्रेष्ठ\",\r\n    \"मंदबुद्धि\",\r\n    \"मिटाना\",\r\n    \"जबड़ा\",\r\n    \"अनुमति\",\r\n  ];\r\n  wordList1: any = [\"COME\", \"BEST\", \"JERK\", \"ERASE\", \"JAW\", \"ALLOW\"];\r\n  wordList2: any = [\"ATTACK\", \"EAGER\", \"ERRATIC\", \"COLOUR\", \"SMALL\", \"SWALLOW\"];\r\n  wordList3: any = [\r\n    \"VIOLENT\",\r\n    \"WALKING\",\r\n    \"CAPTION\",\r\n    \"DECLINE\",\r\n    \"FASHION\",\r\n    \"SESSION\",\r\n  ];\r\n  wordListHindi1: any = [\r\n    \"आइए\",\r\n    \"श्रेष्ठ\",\r\n    \"मंदबुद्धि\",\r\n    \"मिटाना\",\r\n    \"जबड़ा\",\r\n    \"अनुमति\",\r\n  ];\r\n  wordListHindi2: any = [\"हमला\", \"उत्सुक\", \"त्रुटि\", \"रंग\", \"छोटा\", \"गटकना\"];\r\n  wordListHindi3: any = [\"हिंसक\", \"घूमना\", \"संबंध\", \"पतन\", \"विधान\", \"सत्र\"];\r\n  startSquare: any;\r\n  selectedSquares: any = [];\r\n  curWord: any;\r\n  curOrientation: any;\r\n  constructor(props: any) {\r\n    super(props);\r\n    const matrix = this.createMatrix();\r\n    const combine: any = [];\r\n    this.wordList.forEach((word: string, index: number) => {\r\n      combine.push({\r\n        word: word,\r\n        wordHindi: this.wordListHindi1[index],\r\n        selected: false,\r\n      });\r\n    });\r\n    this.state = { matrix, combine };\r\n  }\r\n  componentDidMount() {\r\n    this.createBindings();\r\n  }\r\n  componentDidUpdate() {\r\n    this.createBindings();\r\n  }\r\n  createBindings() {\r\n    if (window.navigator.msPointerEnabled) {\r\n      $(\".puzzleSquare\").on(\"MSPointerDown\", this.startTurn.bind(this));\r\n      $(\".puzzleSquare\").on(\"MSPointerOver\", this.select.bind(this));\r\n      $(\".puzzleSquare\").on(\"MSPointerUp\", this.endTurn.bind(this));\r\n    } else {\r\n      $(\".puzzleSquare\").mousedown(this.startTurn.bind(this));\r\n      $(\".puzzleSquare\").mouseenter(this.mouseMove.bind(this));\r\n      $(\".puzzleSquare\").mouseup(this.endTurn.bind(this));\r\n      $(\".puzzleSquare\").on(\"touchstart\", this.startTurn.bind(this));\r\n      $(\".puzzleSquare\").on(\"touchmove\", this.touchMove.bind(this));\r\n      $(\".puzzleSquare\").on(\"touchend\", this.endTurn.bind(this));\r\n    }\r\n  }\r\n  select(target: any) {\r\n    // if the user hasn't started a word yet, just return\r\n    if (!this.startSquare) {\r\n      return;\r\n    }\r\n    // if the new square is actually the previous square, just return\r\n    var lastSquare = this.selectedSquares[this.selectedSquares.length - 1];\r\n    if (lastSquare === target) {\r\n      return;\r\n    }\r\n\r\n    // see if the user backed up and correct the selectedSquares state if\r\n    // they did\r\n    let backTo;\r\n    for (var i = 0, len = this.selectedSquares.length; i < len; i++) {\r\n      if (this.selectedSquares[i] === target) {\r\n        backTo = i + 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    while (backTo && backTo < this.selectedSquares.length) {\r\n      $(this.selectedSquares[this.selectedSquares.length - 1]).removeClass(\r\n        \"selected\"\r\n      );\r\n      this.selectedSquares.splice(backTo, 1);\r\n      this.curWord = this.curWord.substr(0, this.curWord.length - 1);\r\n    }\r\n    const x1: any = this.startSquare.attributes[\"x\"].value - 0;\r\n    const x2: any = this.startSquare.attributes[\"y\"].value - 0;\r\n    const x3: any = target.currentTarget\r\n      ? target.currentTarget.attributes[\"x\"].value - 0\r\n      : target.attributes[\"x\"].value - 0;\r\n    const x4: any = target.currentTarget\r\n      ? target.currentTarget.attributes[\"y\"].value - 0\r\n      : target.attributes[\"y\"].value - 0;\r\n    const newOrientation = this.calcOrientation(x1, x2, x3, x4);\r\n\r\n    if (newOrientation) {\r\n      this.selectedSquares = [this.startSquare];\r\n      this.curWord = $(this.startSquare).text();\r\n      if (lastSquare !== this.startSquare) {\r\n        $(lastSquare).removeClass(\"selected\");\r\n        lastSquare = this.startSquare;\r\n      }\r\n      this.curOrientation = newOrientation;\r\n    }\r\n\r\n    const x11: any = lastSquare.attributes[\"x\"].value - 0;\r\n    const x21: any = lastSquare.attributes[\"y\"].value - 0;\r\n    const x31: any = target.currentTarget\r\n      ? target.currentTarget.attributes[\"x\"].value - 0\r\n      : target.attributes[\"x\"].value - 0;\r\n    const x41: any = target.currentTarget\r\n      ? target.currentTarget.attributes[\"y\"].value - 0\r\n      : target.attributes[\"y\"].value - 0;\r\n    // see if the move is along the same orientation as the last move\r\n    var orientation = this.calcOrientation(x11, x21, x31, x41);\r\n\r\n    // if the new square isn't along a valid orientation, just ignore it.\r\n    // this makes selecting diagonal words less frustrating\r\n    if (!orientation) {\r\n      return;\r\n    }\r\n\r\n    // finally, if there was no previous orientation or this move is along\r\n    // the same orientation as the last move then play the move\r\n    if (!this.curOrientation || this.curOrientation === orientation) {\r\n      this.curOrientation = orientation;\r\n      this.playTurn(target.currentTarget ? target.currentTarget : target);\r\n    }\r\n  }\r\n  mouseMove(event: any) {\r\n    this.select(event);\r\n  }\r\n  startTurn(event: any) {\r\n    $(event.target).addClass(\"selected\");\r\n    this.startSquare = event.target;\r\n    this.selectedSquares.push(event.target);\r\n    this.curWord = event.target.textContent;\r\n  }\r\n  calcOrientation(x1: any, y1: any, x2: any, y2: any) {\r\n    for (var orientation in orientations) {\r\n      var nextFn = orientations[orientation];\r\n      var nextPos = nextFn(x1, y1, 1);\r\n\r\n      if (nextPos.x === x2 && nextPos.y === y2) {\r\n        return orientation;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  playTurn(square: any) {\r\n    // make sure we are still forming a valid word\r\n    for (var i = 0, len = this.wordList.length; i < len; i++) {\r\n      if (this.wordList[i].indexOf(this.curWord + square.textContent) === 0) {\r\n        square.classList.add(\"selected\");\r\n        this.selectedSquares.push(square);\r\n        this.curWord += square.textContent;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  touchMove(e: any) {\r\n    var xPos = e.originalEvent.touches[0].pageX;\r\n    var yPos = e.originalEvent.touches[0].pageY;\r\n    var targetElement: any = document.elementFromPoint(xPos, yPos);\r\n    if (targetElement.classList.contains(\"puzzleSquare\"))\r\n      this.select(targetElement);\r\n  }\r\n  endTurn() {\r\n    // see if we formed a valid word\r\n    for (var i = 0, len = this.wordList.length; i < len; i++) {\r\n      if (\r\n        this.wordList[i] === this.curWord &&\r\n        !this.state.combine\r\n          .filter((w: any) => {\r\n            return w.selected === true;\r\n          })\r\n          .map((e: any) => e.word)\r\n          .includes(this.curWord)\r\n      ) {\r\n        $(\".selected\").addClass(\"found\");\r\n        const classToApply =\r\n          \"found\" +\r\n          this.state.combine.filter((w: any) => {\r\n            return w.selected === false;\r\n          }).length;\r\n        // $(\".selected\").addClass(classToApply);\r\n        $(\".selected\").attr(\r\n          \"class\",\r\n          classToApply + \" \" + $(\".selected\").attr(\"class\")\r\n        );\r\n        this.reveal(this.wordList.indexOf(this.curWord), classToApply);\r\n        $('input.word[value=\"' + this.curWord + '\"]').addClass(\"wordFound\");\r\n        if (\r\n          this.state.combine.filter((w: any) => {\r\n            return w.selected === false;\r\n          }).length === 0\r\n        ) {\r\n          this.gameComplete();\r\n        }\r\n      }\r\n    }\r\n    // reset the turn\r\n    $(\".selected\").removeClass(\"selected\");\r\n    this.startSquare = null;\r\n    this.selectedSquares = [];\r\n    this.curWord = \"\";\r\n    this.curOrientation = null;\r\n  }\r\n  createMatrix() {\r\n    var options = {\r\n      height: this.height,\r\n      width: this.width,\r\n      orientations: allOrientations,\r\n      preferOverlap: true,\r\n    };\r\n    const WF: any = WordFind();\r\n    const fill = WF.newPuzzle(this.wordList, options);\r\n    let matrix: any = [];\r\n    for (let i = 0; i < this.width; i++) {\r\n      matrix[i] = [];\r\n      for (let j = 0; j < this.height; j++) {\r\n        matrix[i][j] = { x: i, y: j, selected: false, letter: fill[i][j] };\r\n      }\r\n    }\r\n    return matrix;\r\n  }\r\n  reCreate() {\r\n    const matrix = this.createMatrix();\r\n    const combine: any = [];\r\n    this.wordList.forEach((word: string, index: number) => {\r\n      combine.push({\r\n        word: word,\r\n        wordHindi: this.wordListHindi[index],\r\n        selected: false,\r\n      });\r\n    });\r\n    let elements: any = document.getElementsByClassName(\"found\");\r\n    if (elements.length > -1)\r\n      [...elements].map((el: any) => {\r\n        return el.classList.remove(\"found\");\r\n      });\r\n    elements = document.getElementsByClassName(\"selected\");\r\n    if (elements.length > -1)\r\n      [...elements].map((el: any) => {\r\n        return el.classList.remove(\"selected\");\r\n      });\r\n    for (let i = 1; i < 12; i++) {\r\n      elements = document.getElementsByClassName(\"found\" + i);\r\n      if (elements.length > -1)\r\n        [...elements].map((el: any) => {\r\n          return el.classList.remove(\"found\" + i);\r\n        });\r\n    }\r\n    this.setState({ matrix, combine });\r\n  }\r\n  reveal(index: number, classToApply: string) {\r\n    const combine = this.state.combine;\r\n    combine[index].selected = true;\r\n    combine[index].classToApply = classToApply;\r\n    this.setState({ combine });\r\n  }\r\n  gameComplete() {\r\n    alert(\"Game Complete\");\r\n  }\r\n  changeLevel(level: any) {\r\n    this.level = \"Level \" + level;\r\n    if (this.level === \"Level 1\") {\r\n      this.height = 6;\r\n      this.width = 6;\r\n      this.wordList = this.wordList1;\r\n      this.wordListHindi = this.wordListHindi1;\r\n    } else if (this.level === \"Level 2\") {\r\n      this.height = 8;\r\n      this.width = 8;\r\n      this.wordList = this.wordList2;\r\n      this.wordListHindi = this.wordListHindi2;\r\n    } else {\r\n      this.height = 10;\r\n      this.width = 10;\r\n      this.wordList = this.wordList3;\r\n      this.wordListHindi = this.wordListHindi3;\r\n    }\r\n    this.reCreate();\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Row\r\n          className=\"justify-content-center text-center\"\r\n          style={{ marginBottom: \"15px\" }}\r\n        >\r\n          <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group1\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                  {this.level}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onSelect={this.changeLevel.bind(this, 1)}>\r\n                    {\" \"}\r\n                    Level 1\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onSelect={this.changeLevel.bind(this, 2)}>\r\n                    {\" \"}\r\n                    Level 2\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onSelect={this.changeLevel.bind(this, 3)}>\r\n                    {\" \"}\r\n                    Level 3\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ButtonGroup>\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button variant=\"outline-dark\" onClick={this.reCreate.bind(this)}>\r\n                New Game\r\n              </Button>{\" \"}\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </Row>{\" \"}\r\n        <Row className=\"justify-content-center text-center\">\r\n          <div>\r\n            <table>\r\n              <tbody>\r\n                {this.state.matrix.map((i: any, index: any) => (\r\n                  <tr key={index}>\r\n                    {i.map((j: any, index2: any) => {\r\n                      const props: any = {\r\n                        x: j.x,\r\n                        y: j.y,\r\n                      };\r\n                      return (\r\n                        <td key={index2} className=\"td\">\r\n                          <div\r\n                            key={j.x + \"\" + j.y}\r\n                            {...props}\r\n                            className={\"puzzleSquare\"}\r\n                            style={{\r\n                              width: \"40px\",\r\n                              height: \"40px\",\r\n                              lineHeight: \"40px\",\r\n                            }}\r\n                          >\r\n                            {j.letter}\r\n                          </div>\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </Row>\r\n        <Row\r\n          className=\"justify-content-center text-center\"\r\n          style={{ marginTop: \"15px\" }}\r\n        >\r\n          <Col>\r\n            --------------------------- Find These words\r\n            ---------------------------\r\n          </Col>\r\n        </Row>{\" \"}\r\n        <Row className=\"justify-content-center text-center\">\r\n          {this.wordList1.map((word: string, index: any) => {\r\n            return (\r\n              <>\r\n                <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                  <Button\r\n                    key={index}\r\n                    className={\r\n                      \"btn-disabled \" + this.state.combine[index].classToApply\r\n                    }\r\n                    variant={\" outline-secondary\"}\r\n                    style={{ width: \"100px\", marginTop: \"15px\" }}\r\n                  >\r\n                    {this.state.combine[index].selected\r\n                      ? this.state.combine[index].wordHindi\r\n                      : this.state.combine[index].word}\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","export const WordFind = function () {\r\n  // Letters used to fill blank spots in the puzzle\r\n  const LETTERS = \"ABCDEFGHIJKLMNOPRSTUVWY\";\r\n  // The list of all the possible orientations\r\n  var allOrientations = [\r\n    \"diagonal\",\r\n    \"diagonalBack\",\r\n    \"diagonalUp\",\r\n    \"diagonal\",\r\n    \"diagonalBack\",\r\n    \"diagonalUp\",\r\n    \"diagonal\",\r\n    \"diagonalBack\",\r\n    \"diagonalUp\",\r\n    \"horizontal\",\r\n    \"vertical\",\r\n    // \"horizontalBack\",\r\n    // \"vertical\",\r\n    // \"verticalUp\",\r\n    // \"diagonalUpBack\",\r\n  ];\r\n\r\n  var orientations = {\r\n    horizontal: function (x, y, i) {\r\n      return { x: x + i, y: y };\r\n    },\r\n    horizontalBack: function (x, y, i) {\r\n      return { x: x - i, y: y };\r\n    },\r\n    vertical: function (x, y, i) {\r\n      return { x: x, y: y + i };\r\n    },\r\n    verticalUp: function (x, y, i) {\r\n      return { x: x, y: y - i };\r\n    },\r\n    diagonal: function (x, y, i) {\r\n      return { x: x + i, y: y + i };\r\n    },\r\n    diagonalBack: function (x, y, i) {\r\n      return { x: x - i, y: y + i };\r\n    },\r\n    diagonalUp: function (x, y, i) {\r\n      return { x: x + i, y: y - i };\r\n    },\r\n    diagonalUpBack: function (x, y, i) {\r\n      return { x: x - i, y: y - i };\r\n    },\r\n  };\r\n\r\n  var checkOrientations = {\r\n    horizontal: function (x, y, h, w, l) {\r\n      return w >= x + l;\r\n    },\r\n    horizontalBack: function (x, y, h, w, l) {\r\n      return x + 1 >= l;\r\n    },\r\n    vertical: function (x, y, h, w, l) {\r\n      return h >= y + l;\r\n    },\r\n    verticalUp: function (x, y, h, w, l) {\r\n      return y + 1 >= l;\r\n    },\r\n    diagonal: function (x, y, h, w, l) {\r\n      return w >= x + l && h >= y + l;\r\n    },\r\n    diagonalBack: function (x, y, h, w, l) {\r\n      return x + 1 >= l && h >= y + l;\r\n    },\r\n    diagonalUp: function (x, y, h, w, l) {\r\n      return w >= x + l && y + 1 >= l;\r\n    },\r\n    diagonalUpBack: function (x, y, h, w, l) {\r\n      return x + 1 >= l && y + 1 >= l;\r\n    },\r\n  };\r\n\r\n  var skipOrientations = {\r\n    horizontal: function (x, y, l) {\r\n      return { x: 0, y: y + 1 };\r\n    },\r\n    horizontalBack: function (x, y, l) {\r\n      return { x: l - 1, y: y };\r\n    },\r\n    vertical: function (x, y, l) {\r\n      return { x: 0, y: y + 100 };\r\n    },\r\n    verticalUp: function (x, y, l) {\r\n      return { x: 0, y: l - 1 };\r\n    },\r\n    diagonal: function (x, y, l) {\r\n      return { x: 0, y: y + 1 };\r\n    },\r\n    diagonalBack: function (x, y, l) {\r\n      return { x: l - 1, y: x >= l - 1 ? y + 1 : y };\r\n    },\r\n    diagonalUp: function (x, y, l) {\r\n      return { x: 0, y: y < l - 1 ? l - 1 : y + 1 };\r\n    },\r\n    diagonalUpBack: function (x, y, l) {\r\n      return { x: l - 1, y: x >= l - 1 ? y + 1 : y };\r\n    },\r\n  };\r\n  var fillPuzzle = function (words, options) {\r\n    var puzzle = [],\r\n      i,\r\n      j,\r\n      len;\r\n\r\n    // initialize the puzzle with blanks\r\n    for (i = 0; i < options.height; i++) {\r\n      puzzle.push([]);\r\n      for (j = 0; j < options.width; j++) {\r\n        puzzle[i].push(\"\");\r\n      }\r\n    }\r\n\r\n    // add each word into the puzzle one at a time\r\n    for (i = 0, len = words.length; i < len; i++) {\r\n      if (!placeWordInPuzzle(puzzle, options, words[i])) {\r\n        // if a word didn't fit in the puzzle, give up\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // return the puzzle\r\n    return puzzle;\r\n  };\r\n\r\n  var placeWordInPuzzle = function (puzzle, options, word) {\r\n    // find all of the best locations where this word would fit\r\n    var locations = findBestLocations(puzzle, options, word);\r\n\r\n    if (locations.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // select a location at random and place the word there\r\n    var sel = locations[Math.floor(Math.random() * locations.length)];\r\n    placeWord(puzzle, word, sel.x, sel.y, orientations[sel.orientation]);\r\n\r\n    return true;\r\n  };\r\n  var findBestLocations = function (puzzle, options, word) {\r\n    var locations = [],\r\n      height = options.height,\r\n      width = options.width,\r\n      wordLength = word.length,\r\n      maxOverlap = 0; // we'll start looking at overlap = 0\r\n\r\n    // loop through all of the possible orientations at this position\r\n    for (var k = 0, len = options.orientations.length; k < len; k++) {\r\n      var orientation = options.orientations[k],\r\n        check = checkOrientations[orientation],\r\n        next = orientations[orientation],\r\n        skipTo = skipOrientations[orientation],\r\n        x = 0,\r\n        y = 0;\r\n\r\n      // loop through every position on the board\r\n      while (y < height) {\r\n        // see if this orientation is even possible at this location\r\n        if (check(x, y, height, width, wordLength)) {\r\n          // determine if the word fits at the current position\r\n          var overlap = calcOverlap(word, puzzle, x, y, next);\r\n\r\n          // if the overlap was bigger than previous overlaps that we've seen\r\n          if (\r\n            overlap >= maxOverlap ||\r\n            (!options.preferOverlap && overlap > -1)\r\n          ) {\r\n            maxOverlap = overlap;\r\n            locations.push({\r\n              x: x,\r\n              y: y,\r\n              orientation: orientation,\r\n              overlap: overlap,\r\n            });\r\n          }\r\n\r\n          x++;\r\n          if (x >= width) {\r\n            x = 0;\r\n            y++;\r\n          }\r\n        } else {\r\n          // if current cell is invalid, then skip to the next cell where\r\n          // this orientation is possible. this greatly reduces the number\r\n          // of checks that we have to do overall\r\n          var nextPossible = skipTo(x, y, wordLength);\r\n          x = nextPossible.x;\r\n          y = nextPossible.y;\r\n        }\r\n      }\r\n    }\r\n\r\n    // finally prune down all of the possible locations we found by\r\n    // only using the ones with the maximum overlap that we calculated\r\n    return options.preferOverlap\r\n      ? pruneLocations(locations, maxOverlap)\r\n      : locations;\r\n  };\r\n  var calcOverlap = function (word, puzzle, x, y, fnGetSquare) {\r\n    var overlap = 0;\r\n\r\n    // traverse the squares to determine if the word fits\r\n    for (var i = 0, len = word.length; i < len; i++) {\r\n      var next = fnGetSquare(x, y, i),\r\n        square = puzzle[next.y][next.x];\r\n\r\n      // if the puzzle square already contains the letter we\r\n      // are looking for, then count it as an overlap square\r\n      if (square === word[i]) {\r\n        overlap++;\r\n      }\r\n      // if it contains a different letter, than our word doesn't fit\r\n      // here, return -1\r\n      else if (square !== \"\") {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n    // if the entire word is overlapping, skip it to ensure words aren't\r\n    // hidden in other words\r\n    return overlap;\r\n  };\r\n  var pruneLocations = function (locations, overlap) {\r\n    var pruned = [];\r\n    for (var i = 0, len = locations.length; i < len; i++) {\r\n      if (locations[i].overlap >= overlap) {\r\n        pruned.push(locations[i]);\r\n      }\r\n    }\r\n    return pruned;\r\n  };\r\n  var placeWord = function (puzzle, word, x, y, fnGetSquare) {\r\n    for (var i = 0, len = word.length; i < len; i++) {\r\n      var next = fnGetSquare(x, y, i);\r\n      puzzle[next.y][next.x] = word[i];\r\n    }\r\n  };\r\n\r\n  return {\r\n    validOrientations: allOrientations,\r\n\r\n    orientations: orientations,\r\n    newPuzzle: function (words, settings) {\r\n      if (!words.length) {\r\n        throw new Error(\"Zero words provided\");\r\n      }\r\n      var wordList,\r\n        puzzle,\r\n        attempts = 0,\r\n        gridGrowths = 0,\r\n        opts = settings || {};\r\n\r\n      // copy and sort the words by length, inserting words into the puzzle\r\n      // from longest to shortest works out the best\r\n      wordList = words.slice(0).sort();\r\n\r\n      // initialize the options\r\n      var maxWordLength = wordList[0].length;\r\n      var options = {\r\n        height: opts.height || maxWordLength,\r\n        width: opts.width || maxWordLength,\r\n        orientations: opts.orientations || allOrientations,\r\n        fillBlanks: opts.fillBlanks !== undefined ? opts.fillBlanks : true,\r\n        allowExtraBlanks:\r\n          opts.allowExtraBlanks !== undefined ? opts.allowExtraBlanks : true,\r\n        maxAttempts: opts.maxAttempts || 3,\r\n        maxGridGrowth:\r\n          opts.maxGridGrowth !== undefined ? opts.maxGridGrowth : 10,\r\n        preferOverlap:\r\n          opts.preferOverlap !== undefined ? opts.preferOverlap : true,\r\n      };\r\n\r\n      // add the words to the puzzle\r\n      // since puzzles are random, attempt to create a valid one up to\r\n      // maxAttempts and then increase the puzzle size and try again\r\n      while (!puzzle) {\r\n        while (!puzzle && attempts++ < options.maxAttempts) {\r\n          puzzle = fillPuzzle(wordList, options);\r\n        }\r\n\r\n        if (!puzzle) {\r\n          gridGrowths++;\r\n          if (gridGrowths > options.maxGridGrowth) {\r\n            throw new Error(\r\n              `No valid ${options.width}x${options.height} grid found and not allowed to grow more`\r\n            );\r\n          }\r\n          console.log(\r\n            `No valid ${options.width}x${options.height} grid found after ${\r\n              attempts - 1\r\n            } attempts, trying with bigger grid`\r\n          );\r\n          options.height++;\r\n          options.width++;\r\n          attempts = 0;\r\n        }\r\n      }\r\n\r\n      // fill in empty spaces with random letters\r\n      if (options.fillBlanks) {\r\n        var lettersToAdd,\r\n          fillingBlanksCount = 0,\r\n          extraLetterGenerator;\r\n        if (typeof options.fillBlanks === \"function\") {\r\n          extraLetterGenerator = options.fillBlanks;\r\n        } else if (typeof options.fillBlanks === \"string\") {\r\n          lettersToAdd = options.fillBlanks.toLowerCase().split(\"\");\r\n          extraLetterGenerator = () =>\r\n            lettersToAdd.pop() || (fillingBlanksCount++ && \"\");\r\n        } else {\r\n          extraLetterGenerator = () =>\r\n            LETTERS[Math.floor(Math.random() * LETTERS.length)];\r\n        }\r\n        var extraLettersCount = this.fillBlanks({\r\n          puzzle,\r\n          extraLetterGenerator: extraLetterGenerator,\r\n        });\r\n        if (lettersToAdd && lettersToAdd.length) {\r\n          throw new Error(\r\n            `Some extra letters provided were not used: ${lettersToAdd}`\r\n          );\r\n        }\r\n        if (lettersToAdd && fillingBlanksCount && !options.allowExtraBlanks) {\r\n          throw new Error(\r\n            `${fillingBlanksCount} extra letters were missing to fill the grid`\r\n          );\r\n        }\r\n        var gridFillPercent =\r\n          100 * (1 - extraLettersCount / (options.width * options.height));\r\n        console.log(\r\n          `Blanks filled with ${extraLettersCount} random letters - Final grid is filled at ${gridFillPercent.toFixed(\r\n            0\r\n          )}%`\r\n        );\r\n      }\r\n\r\n      return puzzle;\r\n    },\r\n    fillBlanks: function ({ puzzle, extraLetterGenerator }) {\r\n      var extraLettersCount = 0;\r\n      for (var i = 0, height = puzzle.length; i < height; i++) {\r\n        var row = puzzle[i];\r\n        for (var j = 0, width = row.length; j < width; j++) {\r\n          if (!puzzle[i][j]) {\r\n            puzzle[i][j] = extraLetterGenerator();\r\n            extraLettersCount++;\r\n          }\r\n        }\r\n      }\r\n      return extraLettersCount;\r\n    },\r\n\r\n    solve: function (puzzle, words) {\r\n      var options = {\r\n          height: puzzle.length,\r\n          width: puzzle[0].length,\r\n          orientations: allOrientations,\r\n          preferOverlap: true,\r\n        },\r\n        found = [],\r\n        notFound = [];\r\n\r\n      for (var i = 0, len = words.length; i < len; i++) {\r\n        var word = words[i],\r\n          locations = findBestLocations(puzzle, options, word);\r\n\r\n        if (locations.length > 0 && locations[0].overlap === word.length) {\r\n          locations[0].word = word;\r\n          found.push(locations[0]);\r\n        } else {\r\n          notFound.push(word);\r\n        }\r\n      }\r\n\r\n      return { found: found, notFound: notFound };\r\n    },\r\n\r\n    print: function (puzzle) {\r\n      var puzzleString = \"\";\r\n      for (var i = 0, height = puzzle.length; i < height; i++) {\r\n        var row = puzzle[i];\r\n        for (var j = 0, width = row.length; j < width; j++) {\r\n          puzzleString += (row[j] === \"\" ? \" \" : row[j]) + \" \";\r\n        }\r\n        puzzleString += \"\\n\";\r\n      }\r\n\r\n      console.log(puzzleString);\r\n      return puzzleString;\r\n    },\r\n  };\r\n};\r\n","export const GAME_OVER = Symbol('OVER');\r\nexport const GAME_STARTED = Symbol('BEGIN');\r\nexport const GAME_WON = Symbol('WIN');\r\n\r\nexport default {\r\n  GAME_WON,\r\n  GAME_OVER,\r\n  GAME_STARTED,\r\n};\r\n","import randomWord from './random-word';\r\nimport { GAME_STARTED } from './game-states';\r\n\r\nexport default {\r\n  newGame: () => {\r\n    const gameWord = randomWord();\r\n    return {\r\n      word: gameWord,\r\n      letters: gameWord.split('').map(letter => ({\r\n        value: letter,\r\n        guessed: false,\r\n      })),\r\n      guesses: 5,\r\n      gameState: GAME_STARTED,\r\n      pastGuesses: [],\r\n    };\r\n  }\r\n}\r\n","import words from 'an-array-of-english-words';\r\n\r\nexport default () => {\r\n  const wordIndex = Math.floor(Math.random() * words.length);\r\n\r\n  return words[wordIndex];\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './HangmanGameFooter.css';\r\n\r\nclass AppFooter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App-footer\">\r\n        {/* <a target=\"_blank\"\r\n          href=\"https://github.com/ovidiubute/react-hangman\"\r\n        >\r\n          <img src=\"github-10-xxl.png\" width=\"30\" height=\"30\"\r\n            alt=\"Github\"\r\n          />\r\n        </a>\r\n        <h5>Made with <span style={{color: 'red'}}>&#9829;</span> by <a\r\n            target=\"_blank\"\r\n            href=\"https://twitter.com/ovidiubute\">Ovidiu\r\n          </a> using React and create-react-app boilerplate\r\n        </h5> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFooter;\r\n","import React, { Component } from 'react';\r\n\r\nimport './HangmanGameHeader.css';\r\n\r\nclass HangmanGameHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <h2>React Hangman</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HangmanGameHeader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './AttemptsLeft.css';\r\n\r\nclass AttemptsLeft extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"AttemptsLeft\">\r\n        <span>Retries left: <span className=\"AttemptsLeft-Number\">\r\n            {this.props.attempts}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nAttemptsLeft.propTypes = {\r\n  attempts: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default AttemptsLeft;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Letter extends Component {\r\n  render() {\r\n    return (\r\n      <span className=\"Letter\">\r\n        {this.props.value}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nLetter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Letter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Word.css';\r\n\r\nclass Word extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Word\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWord.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element),\r\n}\r\n\r\nexport default Word;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { GAME_WON } from './game-states';\r\n\r\nimport './RestartButton.css';\r\n\r\nclass RestartButton extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App-Restart\">\r\n        <button onClick={this.props.onClick}>\r\n          {this.props.gameState === GAME_WON ? 'Play' : 'Try'} again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRestartButton.propTypes = {\r\n  gameState: PropTypes.symbol.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RestartButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LettersRow.css';\r\n\r\nclass LettersRow extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LettersRow\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLettersRow.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n}\r\n\r\nexport default LettersRow;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LetterBlock.css';\r\n\r\nclass LetterBlock extends Component {\r\n  render() {\r\n    return (\r\n      <div onClick={this.props.onClick} className=\"LetterBlock\">\r\n        <span>\r\n          {this.props.value}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLetterBlock.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default LetterBlock;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LettersRow from './LettersRow';\r\nimport LetterBlock from './LetterBlock';\r\nimport './VirtualKeyboard.css';\r\n\r\nclass VirtualKeyboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"VirtualKeyboard\">\r\n        <div key=\"First\" className=\"VirtualKeyboard-FirstRow\">\r\n          {this._renderRow(VirtualKeyboard.FIRST_ROW)}\r\n        </div>\r\n        <div key=\"Second\" className=\"VirtualKeyboard-SecondRow\">\r\n          {this._renderRow(VirtualKeyboard.SECOND_ROW)}\r\n        </div>\r\n        <div key=\"Third\" className=\"VirtualKeyboard-ThirdRow\">\r\n          {this._renderRow(VirtualKeyboard.THIRD_ROW)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderRow(letters) {\r\n    const children = letters\r\n      .filter(letter => this.props.excluded.indexOf(letter) === -1)\r\n      .map(letter => (\r\n        <LetterBlock\r\n          value={letter}\r\n          onClick={this.props.onClick.bind(null, letter)}\r\n          key={`LetterBlock-${letter}`}\r\n        />\r\n      ));\r\n\r\n    return (\r\n      <LettersRow>\r\n        {children}\r\n      </LettersRow>\r\n    );\r\n  }\r\n}\r\n\r\nVirtualKeyboard.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  excluded: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nVirtualKeyboard.defaultProps = {\r\n  excluded: [],\r\n};\r\n\r\nVirtualKeyboard.FIRST_ROW = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'];\r\nVirtualKeyboard.SECOND_ROW = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\r\nVirtualKeyboard.THIRD_ROW = ['z', 'x', 'c', 'v', 'b', 'n', 'm'];\r\n\r\nexport default VirtualKeyboard;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  character: {\r\n    fill: 'none',\r\n    stroke: 'black',\r\n    strokeWidth: 3,\r\n  },\r\n  post: {\r\n    fill: 'none',\r\n    stroke: 'black',\r\n    strokeWidth: 10,\r\n  },\r\n};\r\n\r\n class Hangman extends Component {\r\n  render() {\r\n    return (\r\n      <svg width=\"500\" height=\"550\">\r\n        <polyline points=\"400,500 100,500 150,500 150,100 320,100 320,150\"\r\n                  style={styles.post} />\r\n        {this._renderBody()}\r\n        {this._renderLeftArm()}\r\n        {this._renderRightArm()}\r\n        {this._renderLeftLeg()}\r\n        {this._renderRightLeg()}\r\n        {this._renderHead()}\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  _renderHead() {\r\n    return this.props.body\r\n        ? <circle cx=\"320\" cy=\"190\" r=\"40\" fill=\"black\" />\r\n        : null;\r\n  }\r\n\r\n  _renderBody() {\r\n    return this.props.body\r\n      ? <line x1=\"320\" y1=\"190\" x2=\"320\" y2=\"360\" style={styles.character} />\r\n      : null;\r\n  }\r\n\r\n  _renderLeftArm() {\r\n    return this.props.leftArm\r\n      ? <line x1=\"320\" y1=\"260\" x2=\"250\" y2=\"230\" style={styles.character} />\r\n      : null;\r\n  }\r\n\r\n  _renderRightArm() {\r\n    return this.props.rightArm\r\n      ? <line x1=\"320\" y1=\"260\" x2=\"390\" y2=\"230\" style={styles.character} />\r\n      : null;\r\n  }\r\n\r\n  _renderLeftLeg() {\r\n    return this.props.leftLeg\r\n      ? <line x1=\"320\" y1=\"360\" x2=\"250\" y2=\"450\" style={styles.character} />\r\n      : null;\r\n  }\r\n\r\n  _renderRightLeg() {\r\n    return this.props.rightLeg\r\n      ? <line x1=\"320\" y1=\"360\" x2=\"390\" y2=\"450\" style={styles.character} />\r\n      : null;\r\n  }\r\n}\r\n\r\nHangman.propTypes = {\r\n  body: PropTypes.bool,\r\n  leftArm: PropTypes.bool,\r\n  rightArm: PropTypes.bool,\r\n  leftLeg: PropTypes.bool,\r\n  rightLeg: PropTypes.bool,\r\n};\r\n\r\nHangman.defaultProps = {\r\n  body: false,\r\n  leftArm: false,\r\n  rightArm: false,\r\n  leftLeg: false,\r\n  rightLeg: false,\r\n};\r\n\r\nexport default Hangman;","import React from 'react';\r\nimport Hangman from './Hangman';\r\n\r\nexport default (attemptsLeft) => {\r\n  let props = {\r\n    body: attemptsLeft <= 4,\r\n    leftArm: attemptsLeft <= 3,\r\n    rightArm: attemptsLeft <= 2,\r\n    leftLeg: attemptsLeft <= 1,\r\n    rightLeg: attemptsLeft === 0,\r\n  };\r\n\r\n  return <Hangman {...props} />\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AttemptsLeft from './AttemptsLeft';\r\nimport Letter from './Letter';\r\nimport Word from './Word';\r\nimport RestartButton from './RestartButton';\r\nimport VirtualKeyboard from './VirtualKeyboard';\r\nimport hangmanAttempts from './HangmanAttempts';\r\nimport { GAME_WON, GAME_OVER } from './game-states';\r\n\r\nimport './Game.css';\r\n\r\n class Game extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Game-content\">\r\n        <div className=\"Game-SideBySide\">\r\n          {this._renderInputPanel()}\r\n          <div className=\"Game-Hangman\">\r\n            {hangmanAttempts(this.props.guesses)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderInputPanel() {\r\n    const hasAttemptsLeft = this.props.guesses > 0;\r\n    const gameWon = this.props.gameState === GAME_WON;\r\n    const content = hasAttemptsLeft\r\n        ? gameWon\r\n          ? this._renderGameFinished('Congrats! 🤗 🏆 🤗', 'Game-GameWin')\r\n          : (\r\n            <div className=\"Game-VirtualKeyboard\">\r\n              <VirtualKeyboard\r\n                excluded={this.props.pastGuesses}\r\n                onClick={this.props.onLetterClick}\r\n              />\r\n            </div>\r\n          )\r\n        : this._renderGameFinished('GAME OVER ☠️', 'Game-GameOver');\r\n\r\n    return (\r\n      <div className=\"Game-InputPanel\">\r\n        {this._renderWord()}\r\n        <div className=\"Game-AttemptsLeft\">\r\n          <AttemptsLeft attempts={this.props.guesses} />\r\n        </div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderGameFinished(message, cssClass) {\r\n    return (\r\n      <div className={cssClass}>\r\n        <span>{message}</span>\r\n        <RestartButton\r\n          onClick={this.props.onRestartClick}\r\n          gameState={this.props.gameState}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _renderWord() {\r\n    return (\r\n      <div className=\"Game-Word\">\r\n        <Word>\r\n          {this.props.letters.map((letter, i) => {\r\n            const letterValue = (\r\n              this.props.gameState === GAME_OVER || letter.guessed\r\n            ) ? letter.value : '_';\r\n\r\n            return (\r\n              <Letter\r\n                key={`word-letter-${i}`}\r\n                value={letterValue}\r\n              />\r\n            );\r\n          })}\r\n        </Word>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGame.propTypes = {\r\n  guesses: PropTypes.number.isRequired,\r\n  word: PropTypes.string.isRequired,\r\n  letters: PropTypes.arrayOf(PropTypes.shape({\r\n    value: PropTypes.string.isRequired,\r\n    guessed: PropTypes.bool.isRequired,\r\n  })).isRequired,\r\n  gameState: PropTypes.symbol.isRequired,\r\n  pastGuesses: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLetterClick: PropTypes.func.isRequired,\r\n  onRestartClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\n\r\nimport gameFactory from './game-state-factory';\r\nimport { GAME_WON, GAME_STARTED, GAME_OVER } from './game-states';\r\nimport HangmanGameHeader from './HangmanGameHeader';\r\nimport HangmanGameFooter from './HangmanGameFooter';\r\nimport Game from './Game';\r\n\r\nimport './HangmanGame.css';\r\n\r\nexport class HangmanGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onLetterClick = this.onLetterClick.bind(this);\r\n    this.onRestartClick = this.onRestartClick.bind(this);\r\n\r\n    // Random word and new game state data\r\n    this.state = gameFactory.newGame();\r\n  }\r\n\r\n  render() {\r\n    const gameProps = {\r\n      onLetterClick: this.onLetterClick,\r\n      onRestartClick: this.onRestartClick,\r\n      ...this.state\r\n    };\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <HangmanGameHeader /> */}\r\n        <Game {...gameProps} />\r\n        <HangmanGameFooter />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onLetterClick(letter, e) {\r\n    e.preventDefault();\r\n\r\n    const firstIndex = this.state.word.indexOf(letter)\r\n    if (firstIndex !== -1) {\r\n      const letters = this.state.letters.map(letterObject => {\r\n        if (letterObject.value === letter) {\r\n          return Object.assign({}, letterObject, {\r\n            guessed: true,\r\n          });\r\n        }\r\n\r\n        return letterObject;\r\n      });\r\n\r\n      // Check if the game has been won\r\n      const gameWon = letters.reduce((winState, currentObject) => {\r\n        return winState && currentObject.guessed;\r\n      }, true);\r\n\r\n      this.setState((prevState, props) => {\r\n        return {\r\n          letters,\r\n          pastGuesses: [letter].concat(prevState.pastGuesses),\r\n          gameState: gameWon ? GAME_WON : GAME_STARTED,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((prevState, props) => {\r\n        // Update number of attempts left\r\n        const guessesLeft = prevState.guesses - 1;\r\n        let stateUpdate = {\r\n          guesses: guessesLeft,\r\n        };\r\n\r\n        // Kill the game if needed\r\n        if (guessesLeft === 0) {\r\n          stateUpdate.gameState = GAME_OVER;\r\n        }\r\n\r\n        // Update the letters already tried\r\n        stateUpdate.pastGuesses = [letter].concat(prevState.pastGuesses);\r\n\r\n        return stateUpdate;\r\n      });\r\n    }\r\n  }\r\n\r\n  onRestartClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState(gameFactory.newGame());\r\n  }\r\n}\r\n\r\nexport default HangmanGame;\r\n","import React, { Component } from 'react';\r\nimport Crossword from '@jaredreisinger/react-crossword';\r\n\r\n\r\n\r\n\r\nconst clue = '';\r\n\r\nconst data = {\r\n  across: {\r\n    1: { clue: 'This', answer: 'XXX', row: 0, col: 0 },\r\n    4: { clue: 'is', answer: 'XXX', row: 0, col: 4 },\r\n    7: { clue: 'not', answer: 'XXX', row: 1, col: 0 },\r\n    8: { clue: 'a', answer: 'XXXX', row: 1, col: 4 },\r\n    10: { clue: 'real', answer: 'XX', row: 2, col: 0 },\r\n    11: { clue: 'crossword,', answer: 'XX', row: 2, col: 3 },\r\n    12: { clue: 'it', answer: 'XX', row: 2, col: 6 },\r\n    13: { clue: 'is', answer: 'XXXXXX', row: 3, col: 0 },\r\n    16: { clue: 'only', answer: 'XXXXXX', row: 4, col: 2 },\r\n    19: { clue: 'showing', answer: 'XX', row: 5, col: 0 },\r\n    21: { clue: 'the', answer: 'XX', row: 5, col: 3 },\r\n    22: { clue: 'kind', answer: 'XX', row: 5, col: 6 },\r\n    23: { clue: 'of', answer: 'XXXX', row: 6, col: 0 },\r\n    25: { clue: 'thing', answer: 'XXX', row: 6, col: 5 },\r\n    26: { clue: 'you', answer: 'XXX', row: 7, col: 1 },\r\n    27: { clue: 'can', answer: 'XXX', row: 7, col: 5 },\r\n  },\r\n  down: {\r\n    1: { clue: 'create.', answer: 'XXXX', row: 0, col: 0 },\r\n    2: { clue: 'All', answer: 'XXXX', row: 0, col: 1 },\r\n    3: { clue: 'of', answer: 'XX', row: 0, col: 2 },\r\n    4: { clue: 'the', answer: 'XXXXXX', row: 0, col: 4 },\r\n    5: { clue: 'answers', answer: 'XX', row: 0, col: 5 },\r\n    6: { clue: 'are', answer: 'XXX', row: 0, col: 6 },\r\n    9: { clue: '\"X\"', answer: 'XX', row: 1, col: 7 },\r\n    11: { clue, answer: 'XXXXXX', row: 2, col: 3 },\r\n    14: { clue, answer: 'XX', row: 3, col: 2 },\r\n    15: { clue, answer: 'XX', row: 3, col: 5 },\r\n    17: { clue, answer: 'XXXX', row: 4, col: 6 },\r\n    18: { clue, answer: 'XXXX', row: 4, col: 7 },\r\n    19: { clue, answer: 'XX', row: 5, col: 0 },\r\n    20: { clue, answer: 'XXX', row: 5, col: 1 },\r\n    24: { clue, answer: 'XX', row: 6, col: 2 },\r\n    25: { clue, answer: 'XX', row: 6, col: 5 },\r\n  },\r\n};\r\nexport class CrossWord extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{ width: '60%' }}>\r\n        <Crossword data={data} useStorage={false} />\r\n      </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./colors.css\";\r\nimport { DashboardComponent } from \"./component/dashboard\";\r\nimport { ScrabbleComponent } from \"./component/Scabble\";\r\nimport { WordSearchComponent } from \"./component/WordSearch\";\r\nimport { HangmanGame } from \"./component/hangman/HangmanGame\";\r\nimport { CrossWord } from \"./component/crossword/CrossWord\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/Scrabble\">\r\n              Scrabble\r\n            </Nav.Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/WordSearch\">\r\n              WordSearch\r\n            </Nav.Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/CrossWord\">\r\n            CrossWord\r\n            </Nav.Link>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Nav.Link as={Link} to=\"/Hangman\">\r\n            HangmanGame\r\n            </Nav.Link>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n      <Switch>\r\n        <Route path=\"/Scrabble\">\r\n          <ScrabbleComponent />\r\n        </Route>\r\n        <Route path=\"/WordSearch\">\r\n          <WordSearchComponent />\r\n        </Route>\r\n        <Route path=\"/CrossWord\">\r\n          <CrossWord />\r\n        </Route>\r\n        <Route path=\"/Hangman\">\r\n          <HangmanGame />\r\n        </Route>\r\n      </Switch>\r\n      <DashboardComponent></DashboardComponent>\r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}