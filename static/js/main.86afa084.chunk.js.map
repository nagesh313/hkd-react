{"version":3,"sources":["component/Scabble.tsx","component/WordSearch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ScrabbleComponent","props","word","hint","display","selection","disabled","successJumbotron","failureJumbotron","hintJumbotron","failed","success","hintFlag","selectionIndex","level","newGame","array","sort","Math","random","this","wordClick","charAt","length","findIndex","e","index","console","log","pop","setState","join","Jumbotron","className","aria-hidden","Button","variant","onClick","bind","letter","clickIndex","event","push","flat","shuffleArray","style","marginBottom","Container","Row","ButtonToolbar","aria-label","ButtonGroup","Dropdown","Toggle","id","Menu","Item","onSelect","changeLevel","undo","showHint","split","map","leter","hidden","check","Component","WordSearchComponent","App","Navbar","bg","Nav","NavItem","Link","as","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86afa084.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  Dropdown,\r\n  Jumbotron,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nexport class ScrabbleComponent extends Component<{}, {}> {\r\n  word: any;\r\n  hint = \"\";\r\n  display: any;\r\n  selection: any;\r\n  disabled: any;\r\n  successJumbotron: any;\r\n  failureJumbotron: any;\r\n  hintJumbotron: any = \"\";\r\n  failed = false;\r\n  success = false;\r\n  hintFlag = false;\r\n  selectionIndex: any;\r\n  level = \"Level 1\";\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.newGame();\r\n  }\r\n  shuffleArray(array: any) {\r\n    array.sort(() => Math.random() - 0.5);\r\n    return array;\r\n  }\r\n  showHint() {\r\n    // this.hintFlag = true;\r\n    // this.selection.push(this.word.charAt(this.selection.length));\r\n    this.wordClick(\r\n      this.word.charAt(this.selection.length),\r\n      this.display.findIndex((e: any, index: any) => {\r\n        if (this.disabled[index]) {\r\n          return false;\r\n        } else {\r\n          return e === this.word.charAt(this.selection.length);\r\n        }\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n  undo() {\r\n    console.log(this);\r\n    this.selection.pop();\r\n    this.hintFlag = false;\r\n    this.disabled[this.selectionIndex.pop()] = false;\r\n    this.setState({});\r\n  }\r\n  check() {\r\n    if (this.selection.join(\"\") === this.word) {\r\n      this.failed = false;\r\n      this.success = true;\r\n      this.successJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>You Win</h1>\r\n          <p>\r\n            <i className=\"fa fa-smile-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    } else {\r\n      this.failed = true;\r\n      this.success = false;\r\n      this.failureJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>Try again!</h1>\r\n          <p>\r\n            <i className=\"fa fa-frown-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    }\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n\r\n  wordClick(letter: any, clickIndex: any, event: any) {\r\n    console.log(event);\r\n    console.log(letter);\r\n    this.selection.push(letter);\r\n    this.selectionIndex.push(clickIndex);\r\n    this.disabled[clickIndex] = true;\r\n    if (this.disabled.flat().length === this.display.length) {\r\n      this.hintFlag = true;\r\n    }\r\n    this.setState({});\r\n  }\r\n  newGame() {\r\n    if (this.level === \"Level 1\") {\r\n      this.word = \"early\";\r\n      this.hint = \"जल्दी\";\r\n    } else if (this.level === \"Level 2\") {\r\n      this.word = \"Squeeze\";\r\n      this.hint = \"निचोड़ना\";\r\n    } else {\r\n      this.word = \"abnormal\";\r\n      this.hint = \"असामान्य\";\r\n    }\r\n    this.display = [...this.word];\r\n    this.display = this.shuffleArray(this.display);\r\n    this.selection = [];\r\n    this.selectionIndex = [];\r\n    this.disabled = [];\r\n    this.failed = false;\r\n    this.success = false;\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n  changeLevel(level: any) {\r\n    this.level = \"Level \" + level;\r\n    this.newGame();\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n        <Container className=\"justify-content-center\">\r\n          <Row className=\"justify-content-center\"></Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group1\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    {this.level}\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 1)}>\r\n                      {\" \"}\r\n                      Level 1\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 2)}>\r\n                      {\" \"}\r\n                      Level 2\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 3)}>\r\n                      {\" \"}\r\n                      Level 3\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.newGame.bind(this)}\r\n                >\r\n                  New Game\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  disabled={\r\n                    this.selectionIndex.length === 0 ||\r\n                    this.failed ||\r\n                    this.success\r\n                  }\r\n                  onClick={this.undo.bind(this)}\r\n                >\r\n                  Undo\r\n                </Button>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  disabled={this.hintFlag || this.failed || this.success}\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.showHint.bind(this)}\r\n                >\r\n                  Hint\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <Jumbotron className=\"text-center\">\r\n              <h1>Meaning</h1>\r\n              <p>{this.hint}</p>\r\n            </Jumbotron>\r\n          </Row>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.word.split(\"\").map((leter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"fill\" + index}\r\n                  >\r\n                    <Button variant=\"outline-primary\">\r\n                      {this.selection[index]}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.display.map((letter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"word\" + index}\r\n                  >\r\n                    <Button\r\n                      // hidden={this.disabled[index] === true}\r\n                      onClick={this.wordClick.bind(this, letter, index)}\r\n                      disabled={this.disabled[index] === true}\r\n                    >\r\n                      {letter}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={this.selection.flat().length !== this.word.length}\r\n          >\r\n            <Button\r\n              disabled={this.success || this.failed}\r\n              onClick={this.check.bind(this)}\r\n            >\r\n              Check\r\n            </Button>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row className=\"justify-content-center\" hidden={!this.hintFlag}>\r\n            {this.hintJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(this.success && !this.failed)}\r\n          >\r\n            {this.successJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(!this.success && this.failed)}\r\n          >\r\n            {this.failureJumbotron}\r\n          </Row>{\" \"}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport class WordSearchComponent extends Component<{}, {}> {\r\n  render() {\r\n    return <div>WordSearchComponent</div>;\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ScrabbleComponent } from \"./component/Scabble\";\nimport { WordSearchComponent } from \"./component/WordSearch\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar bg=\"light\" variant=\"light\">\n          <Nav className=\"mr-auto\">\n            <NavItem>\n              <Nav.Link as={Link} to=\"/Scrabble\">\n                Scrabble\n              </Nav.Link>\n            </NavItem>\n            <NavItem>\n              <Nav.Link as={Link} to=\"/WordSearch\">\n                WordSearchComponent\n              </Nav.Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route path={[\"/Scrabble\", \"/\"]}>\n            <ScrabbleComponent />\n          </Route>\n          <Route path=\"/WordSearch\">\n            <WordSearchComponent />\n          </Route>\n        </Switch>\n        {/* <DashboardComponent></DashboardComponent> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}