{"version":3,"sources":["component/dashboard.tsx","component/Scabble.tsx","component/WordSearch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","dataField","text","DashboardComponent","props","state","leaderBoardData","rank","name","score","data","this","shuffleArray","setState","array","i","length","j","Math","floor","random","temp","Container","Row","className","Col","style","marginBottom","ButtonGroup","aria-label","Button","variant","onClick","shuffle","bind","keyField","striped","hover","condensed","pagination","paginationFactory","paginationSize","pageStartIndex","sizePerPageList","value","Component","ScrabbleComponent","word","hint","display","selection","disabled","successJumbotron","failureJumbotron","hintJumbotron","failed","success","hintFlag","selectionIndex","level","newGame","sort","wordClick","charAt","findIndex","e","index","console","log","pop","join","Jumbotron","aria-hidden","letter","clickIndex","event","push","flat","ButtonToolbar","Dropdown","Toggle","id","Menu","Item","onSelect","changeLevel","undo","showHint","split","map","leter","hidden","check","WordSearchComponent","App","Navbar","bg","Nav","NavItem","Link","as","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e7c5f99.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup, Col, Container, Row } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nconst columns = [\r\n  {\r\n    dataField: \"rank\",\r\n    text: \"Rank\",\r\n  },\r\n  {\r\n    dataField: \"name\",\r\n    text: \"User Name\",\r\n  },\r\n  {\r\n    dataField: \"score\",\r\n    text: \"Score\",\r\n  },\r\n];\r\nexport class DashboardComponent extends Component<\r\n  {},\r\n  { leaderBoardData: any }\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      leaderBoardData: [\r\n        { rank: \"1\", name: \"Anuj\", score: \"3333333\" },\r\n        { rank: \"2\", name: \"Ram\", score: \"555555\" },\r\n        { rank: \"3\", name: \"Anand\", score: \"222222\" },\r\n        { rank: \"4\", name: \"Nishant\", score: \"1111111\" },\r\n        { rank: \"5\", name: \"Rahul\", score: \"123\" },\r\n        { rank: \"6\", name: \"Ram1\", score: \"555555\" },\r\n        { rank: \"7\", name: \"Anand1\", score: \"222222\" },\r\n        { rank: \"8\", name: \"Nishant1\", score: \"1111111\" },\r\n        { rank: \"9\", name: \"Rahul1\", score: \"123\" },\r\n        { rank: \"10\", name: \"Ram2\", score: \"555555\" },\r\n        { rank: \"11\", name: \"Anand2\", score: \"222222\" },\r\n        { rank: \"12\", name: \"Nishant2\", score: \"1111111\" },\r\n        { rank: \"13\", name: \"Rahul2\", score: \"123\" },\r\n      ],\r\n    };\r\n  }\r\n  shuffle() {\r\n    const data = this.shuffleArray(this.state.leaderBoardData);\r\n    this.setState({ leaderBoardData: data });\r\n  }\r\n  shuffleArray(array: any) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br></br>\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <h4>LeaderBoard</h4>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-center\" style={{ marginBottom: \"8px\" }}>\r\n            <ButtonGroup aria-label=\"Basic example\">\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Daily\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Monthly\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.shuffle.bind(this)}>\r\n                Yearly\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <BootstrapTable\r\n              keyField=\"rank\"\r\n              data={this.state.leaderBoardData}\r\n              columns={columns}\r\n              striped\r\n              hover\r\n              condensed\r\n              pagination={paginationFactory({\r\n                paginationSize: 4,\r\n                pageStartIndex: 0,\r\n                sizePerPageList: [\r\n                  {\r\n                    text: \"5\",\r\n                    value: 5,\r\n                  },\r\n                ],\r\n              })}\r\n            />{\" \"}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  Dropdown,\r\n  Jumbotron,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nexport class ScrabbleComponent extends Component<{}, {}> {\r\n  word: any;\r\n  hint = \"\";\r\n  display: any;\r\n  selection: any;\r\n  disabled: any;\r\n  successJumbotron: any;\r\n  failureJumbotron: any;\r\n  hintJumbotron: any = \"\";\r\n  failed = false;\r\n  success = false;\r\n  hintFlag = false;\r\n  selectionIndex: any;\r\n  level = \"Level 1\";\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.newGame();\r\n  }\r\n  shuffleArray(array: any) {\r\n    array.sort(() => Math.random() - 0.5);\r\n    return array;\r\n  }\r\n  showHint() {\r\n    // this.hintFlag = true;\r\n    // this.selection.push(this.word.charAt(this.selection.length));\r\n    this.wordClick(\r\n      this.word.charAt(this.selection.length),\r\n      this.display.findIndex((e: any, index: any) => {\r\n        if (this.disabled[index]) {\r\n          return false;\r\n        } else {\r\n          return e === this.word.charAt(this.selection.length);\r\n        }\r\n      }),\r\n      {}\r\n    );\r\n  }\r\n  undo() {\r\n    console.log(this);\r\n    this.selection.pop();\r\n    this.hintFlag = false;\r\n    this.disabled[this.selectionIndex.pop()] = false;\r\n    this.setState({});\r\n  }\r\n  check() {\r\n    if (this.selection.join(\"\") === this.word) {\r\n      this.failed = false;\r\n      this.success = true;\r\n      this.successJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>You Win</h1>\r\n          <p>\r\n            <i className=\"fa fa-smile-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    } else {\r\n      this.failed = true;\r\n      this.success = false;\r\n      this.failureJumbotron = (\r\n        <Jumbotron className=\"text-center\">\r\n          <h1>Try again!</h1>\r\n          <p>\r\n            <i className=\"fa fa-frown-o fa-3x\" aria-hidden=\"true\"></i>\r\n          </p>\r\n          <p>\r\n            Correct word &nbsp;\r\n            {this.word}\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={this.newGame.bind(this)}>\r\n              Next\r\n            </Button>\r\n          </p>\r\n        </Jumbotron>\r\n      );\r\n    }\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n\r\n  wordClick(letter: any, clickIndex: any, event: any) {\r\n    console.log(event);\r\n    console.log(letter);\r\n    this.selection.push(letter);\r\n    this.selectionIndex.push(clickIndex);\r\n    this.disabled[clickIndex] = true;\r\n    if (this.disabled.flat().length === this.display.length) {\r\n      this.hintFlag = true;\r\n    }\r\n    this.setState({});\r\n  }\r\n  newGame() {\r\n    if (this.level === \"Level 1\") {\r\n      this.word = \"early\";\r\n      this.hint = \"जल्दी\";\r\n    } else if (this.level === \"Level 2\") {\r\n      this.word = \"Squeeze\";\r\n      this.hint = \"निचोड़ना\";\r\n    } else {\r\n      this.word = \"abnormal\";\r\n      this.hint = \"असामान्य\";\r\n    }\r\n    this.display = [...this.word];\r\n    this.display = this.shuffleArray(this.display);\r\n    this.selection = [];\r\n    this.selectionIndex = [];\r\n    this.disabled = [];\r\n    this.failed = false;\r\n    this.success = false;\r\n    this.hintFlag = false;\r\n    this.setState({});\r\n  }\r\n  changeLevel(level: any) {\r\n    this.level = \"Level \" + level;\r\n    this.newGame();\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n        <Container className=\"justify-content-center\">\r\n          <Row className=\"justify-content-center\"></Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group1\">\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    {this.level}\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 1)}>\r\n                      {\" \"}\r\n                      Level 1\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 2)}>\r\n                      {\" \"}\r\n                      Level 2\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onSelect={this.changeLevel.bind(this, 3)}>\r\n                      {\" \"}\r\n                      Level 3\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.newGame.bind(this)}\r\n                >\r\n                  New Game\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  disabled={\r\n                    this.selectionIndex.length === 0 ||\r\n                    this.failed ||\r\n                    this.success\r\n                  }\r\n                  onClick={this.undo.bind(this)}\r\n                >\r\n                  Undo\r\n                </Button>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button\r\n                  disabled={this.hintFlag || this.failed || this.success}\r\n                  variant=\"outline-dark\"\r\n                  onClick={this.showHint.bind(this)}\r\n                >\r\n                  Hint\r\n                </Button>{\" \"}\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <Jumbotron className=\"text-center\">\r\n              <h1>Meaning</h1>\r\n              <p>{this.hint}</p>\r\n            </Jumbotron>\r\n          </Row>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.word.split(\"\").map((leter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"fill\" + index}\r\n                  >\r\n                    <Button variant=\"outline-primary\">\r\n                      {this.selection[index]}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>\r\n          <div style={{ marginBottom: \"8px\" }}></div>{\" \"}\r\n          <Row className=\"justify-content-center\">\r\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n              {this.display.map((letter: string, index: any) => {\r\n                return (\r\n                  <ButtonGroup\r\n                    className=\"mr-2\"\r\n                    aria-label=\"First group\"\r\n                    key={\"word\" + index}\r\n                  >\r\n                    <Button\r\n                      // hidden={this.disabled[index] === true}\r\n                      onClick={this.wordClick.bind(this, letter, index)}\r\n                      disabled={this.disabled[index] === true}\r\n                    >\r\n                      {letter}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                );\r\n              })}\r\n            </ButtonToolbar>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={this.selection.flat().length !== this.word.length}\r\n          >\r\n            <Button\r\n              disabled={this.success || this.failed}\r\n              onClick={this.check.bind(this)}\r\n            >\r\n              Check\r\n            </Button>\r\n          </Row>{\" \"}\r\n          <div style={{ marginBottom: \"8px\" }}></div>\r\n          <Row className=\"justify-content-center\" hidden={!this.hintFlag}>\r\n            {this.hintJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(this.success && !this.failed)}\r\n          >\r\n            {this.successJumbotron}\r\n          </Row>{\" \"}\r\n          <Row\r\n            className=\"justify-content-center\"\r\n            hidden={!(!this.success && this.failed)}\r\n          >\r\n            {this.failureJumbotron}\r\n          </Row>{\" \"}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport class WordSearchComponent extends Component<{}, {}> {\r\n  render() {\r\n    return <div>WordSearchComponent</div>;\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { DashboardComponent } from \"./component/dashboard\";\nimport { ScrabbleComponent } from \"./component/Scabble\";\nimport { WordSearchComponent } from \"./component/WordSearch\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar bg=\"light\" variant=\"light\">\n          <Nav className=\"mr-auto\">\n            <NavItem>\n              <Nav.Link as={Link} to=\"/Scrabble\">\n                Scrabble\n              </Nav.Link>\n            </NavItem>\n            <NavItem>\n              <Nav.Link as={Link} to=\"/WordSearch\">\n                WordSearchComponent\n              </Nav.Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route path={[\"/Scrabble\", \"/\"]}>\n            <ScrabbleComponent />\n          </Route>\n          <Route path=\"/WordSearch\">\n            <WordSearchComponent />\n          </Route>\n        </Switch>\n        <DashboardComponent></DashboardComponent>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}